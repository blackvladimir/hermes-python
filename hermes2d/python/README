Python wrappers to Hermes
-------------------------

These are thin Python wrappers written in Cython (http://cython.org/).

Compile using (in the root directory):

$ cmake -DWITH_PYTHON=YES .
$ make

It's just one file, hermes2d.pyx, that is compiled with Cython[0] into a C file
and then linked with hermes, so you get hermes2d.so (that depends on hermes2d
shared library, generated with "make shared") that you can import from python
using "import hermes2d".

Tests
-----

It's a good idea to execute tests to make sure everything works. Do (either in
the root or the python directory):

$ make test-python

Examples
--------

All examples 01 - 08 are translated to Python and they work correctly, see
01.py up to 08.py. They are compiled automatically.
As to speed, the callback functions are done in Cython at the C level,
so it is as fast as the C++ examples.
